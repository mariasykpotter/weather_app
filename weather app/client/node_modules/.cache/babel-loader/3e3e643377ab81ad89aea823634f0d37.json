{"ast":null,"code":"import _slicedToArray from \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\pages\\\\LinksPage.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from '../components/Loader';\nimport { LinksList } from '../components/LinksList';\nexport const LinksPage = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        links = _useState2[0],\n        setLinks = _useState2[1];\n\n  const _useHttp = useHttp(),\n        loading = _useHttp.loading,\n        request = _useHttp.request;\n\n  const _useContext = useContext(AuthContext),\n        token = _useContext.token;\n\n  const fetchLinks = useCallback(async () => {\n    try {\n      const fetched = await request('/api/link', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setLinks(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchLinks();\n  }, [fetchLinks]);\n\n  if (loading) {\n    return React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, !loading && React.createElement(LinksList, {\n    links: links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/pages/LinksPage.js"],"names":["React","useCallback","useContext","useEffect","useState","useHttp","AuthContext","Loader","LinksList","LinksPage","links","setLinks","loading","request","token","fetchLinks","fetched","Authorization","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACHL,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QACtBM,KADsB;AAAA,QACfC,QADe;;AAAA,mBAEFN,OAAO,EAFL;AAAA,QAEtBO,OAFsB,YAEtBA,OAFsB;AAAA,QAEbC,OAFa,YAEbA,OAFa;;AAAA,sBAGbX,UAAU,CAACI,WAAD,CAHG;AAAA,QAGtBQ,KAHsB,eAGtBA,KAHsB;;AAK7B,QAAMC,UAAU,GAAGd,WAAW,CAAC,YAAY;AACzC,QAAI;AACF,YAAMe,OAAO,GAAG,MAAMH,OAAO,CAAC,WAAD,EAAc,KAAd,EAAqB,IAArB,EAA2B;AACtDI,QAAAA,aAAa,EAAG,UAASH,KAAM;AADuB,OAA3B,CAA7B;AAGAH,MAAAA,QAAQ,CAACK,OAAD,CAAR;AACD,KALD,CAKE,OAAOE,CAAP,EAAU,CAAE;AACf,GAP6B,EAO3B,CAACJ,KAAD,EAAQD,OAAR,CAP2B,CAA9B;AASAV,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAIH,OAAJ,EAAa;AACX,WAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,0CACG,CAACA,OAAD,IAAY,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,CADF;AAKD,CA3BM","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList'\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([])\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/link', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setLinks(fetched)\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchLinks()\r\n  }, [fetchLinks])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading && <LinksList links={links} />}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
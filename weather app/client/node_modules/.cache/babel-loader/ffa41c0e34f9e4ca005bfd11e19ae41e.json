{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport './font/Rimouski.css';\nimport './index.css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\nconst KELVIN = 272.15;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.to_Kelvin = () => {\n      if (this.state.ispressed1 && !this.state.ispressed2) {\n        this.setState(prevState => ({\n          ispressed1: !prevState.ispressed1,\n          temp: !this.state.ispressed1 ? Math.round((this.state.temp + KELVIN) * 100) / 100 : Math.round((this.state.temp - KELVIN) * 100) / 100,\n          scale: !this.state.ispressed1 ? '°K' : '°C',\n          button1: !this.state.ispressed1 ? 'Celsius' : 'Kelvin'\n        }));\n      } else {\n        console.log('here1');\n        this.setState(prevState => ({\n          ispressed1: !prevState.ispressed1,\n          temp: !this.state.ispressed2 ? Math.round((this.state.temp * 9 / 5 - 459.67) * 100) / 100 : Math.round((this.state.temp + 459.67) * 5 / 9 * 100) / 100,\n          scale: !this.state.ispressed2 ? '°F' : '°K',\n          button2: !this.state.ispressed2 ? 'Fahrenheit' : 'Kelvin'\n        }));\n      }\n    };\n\n    this.to_Fahrenheit = () => {\n      this.setState(prevState => ({\n        ispressed2: !prevState.ispressed2,\n        temp: !this.state.ispressed2 ? Math.round((this.state.temp * 9 / 5 + 32) * 100) / 100 : Math.round((this.state.temp - 32) * 5 / 9 * 100) / 100,\n        scale: !this.state.ispressed2 ? '°F' : '°C',\n        button2: !this.state.ispressed2 ? 'Celsius' : 'Fahrenheit'\n      }));\n\n      if (this.state.ispressed1 && this.state.ispressed2) {\n        console.log('here2');\n        this.setState(prevState => ({\n          ispressed1: !prevState.ispressed1,\n          temp: !this.state.ispressed2 ? Math.round((this.state.temp * 9 / 5 - 459.67) * 100) / 100 : Math.round((this.state.temp + 459.67) * 5 / 9 * 100) / 100,\n          scale: !this.state.ispressed2 ? '°K' : '°F',\n          button2: !this.state.ispressed2 ? 'Fahrenheit' : 'Kelvin'\n        }));\n      }\n    };\n\n    this.weatherMethod = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          longitude: data.coord.lon,\n          latitude: data.coord.lat,\n          description: data.weather[0].main,\n          temp: Math.round((data.main.temp - KELVIN) * 100) / 100,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          wind: data.wind.speed,\n          icon: data.weather[0].icon\n        });\n      });\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: '',\n      temp: null,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined,\n      icon: undefined,\n      scale: '°C',\n      button1: 'Kelvin',\n      ispressed1: false,\n      button2: 'Fahrenheit',\n      ispressed2: false\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n      id: \"city\",\n      type: \"city\",\n      name: \"city\",\n      className: \"yellow-input\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\",\n      id: \"country\",\n      type: \"country\",\n      name: \"country\",\n      className: \"yellow-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"my-button\",\n      onClick: () => this.weatherMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Search\")), React.createElement(MainPage, {\n      button1: this.state.button1,\n      button2: this.state.button2,\n      temp: this.state.temp,\n      scale: this.state.scale,\n      Celsius_Kelvin: () => this.to_Kelvin(),\n      Celsius_Fahrenheit: () => this.to_Fahrenheit(),\n      icon: this.state.icon,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","KELVIN","App","Component","constructor","props","to_Kelvin","state","ispressed1","ispressed2","setState","prevState","temp","Math","round","scale","button1","console","log","button2","to_Fahrenheit","weatherMethod","response","fetch","city","then","res","json","data","longitude","coord","lon","latitude","lat","description","weather","main","name","country","sys","sunrise","sunset","wind","speed","icon","undefined","render","marginTop","height","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport './font/Rimouski.css'\r\nimport './index.css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nconst KELVIN = 272.15;\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: '',\r\n            temp: null,\r\n            city: undefined,\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined,\r\n            icon:undefined,\r\n            scale: '°C',\r\n            button1: 'Kelvin',\r\n            ispressed1: false,\r\n            button2: 'Fahrenheit',\r\n            ispressed2: false\r\n        })\r\n    }\r\n\r\n    to_Kelvin = () => {\r\n        if(this.state.ispressed1 && !this.state.ispressed2){\r\n        this.setState((prevState) => ({ ispressed1 : !prevState.ispressed1 ,\r\n                temp: !this.state.ispressed1 ?\r\n                Math.round(((this.state.temp + KELVIN)*100))/100 :\r\n                Math.round(((this.state.temp - KELVIN) *100))/100,\r\n            scale: !this.state.ispressed1 ?\r\n                '°K':'°C',\r\n            button1: !this.state.ispressed1 ?\r\n                'Celsius':'Kelvin'\r\n        }) )}\r\n        else{\r\n            console.log('here1')\r\n            this.setState((prevState) => ({ ispressed1 : !prevState.ispressed1 ,\r\n                temp: !this.state.ispressed2 ?\r\n                    Math.round((this.state.temp*9/5 - 459.67)*100)/100 :\r\n                    Math.round(((this.state.temp+459.67)*5/9) *100)/100,\r\n                scale: !this.state.ispressed2 ? '°F' : '°K',\r\n                button2: !this.state.ispressed2 ? 'Fahrenheit':'Kelvin'\r\n            }))}\r\n    }\r\n    to_Fahrenheit = () => {\r\n        this.setState((prevState) => ({ ispressed2 : !prevState.ispressed2 ,\r\n            temp: !this.state.ispressed2 ?\r\n                Math.round((this.state.temp*9/5 + 32)*100)/100 :\r\n                Math.round(((this.state.temp - 32)*5/9) *100)/100,\r\n            scale: !this.state.ispressed2 ?\r\n                '°F':'°C',\r\n            button2: !this.state.ispressed2 ?\r\n                'Celsius':'Fahrenheit'\r\n        }) );\r\n        if (this.state.ispressed1 && this.state.ispressed2){\r\n            console.log('here2')\r\n            this.setState((prevState) => ({ ispressed1 : !prevState.ispressed1 ,\r\n                temp: !this.state.ispressed2 ?\r\n                    Math.round((this.state.temp*9/5 - 459.67)*100)/100 :\r\n                    Math.round(((this.state.temp+459.67)*5/9) *100)/100,\r\n                scale: !this.state.ispressed2 ? '°K' : '°F',\r\n                button2: !this.state.ispressed2 ? 'Fahrenheit' : 'Kelvin'\r\n            }))\r\n        }\r\n        }\r\n    weatherMethod = async() => {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`)\r\n            .then((res) => {\r\n                return  res.json()\r\n            }).then((data) => {\r\n                this.setState({\r\n                    longitude: data.coord.lon,\r\n                    latitude: data.coord.lat,\r\n                    description: data.weather[0].main,\r\n                    temp: Math.round(((data.main.temp - KELVIN) *100))/100,\r\n                    city: data.name,\r\n                    country: data.sys.country,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    wind: data.wind.speed,\r\n                    icon: data.weather[0].icon\r\n                })\r\n            });\r\n    }\r\n    render(){\r\n      return (\r\n          <Router>\r\n                <Route exact path=\"\">\r\n                                    <form style={{marginTop:10}}>\r\n                                            <input style={{height:35}}\r\n                                                placeholder=\"Введите город\"\r\n                                                id=\"city\"\r\n                                                type=\"city\"\r\n                                                name=\"city\"\r\n                                                className=\"yellow-input\"\r\n                                                onChange={e => this.setState({city: e.target.value})}\r\n                                                value={this.props.value}\r\n                                            />\r\n                                            <input\r\n                                                style={{height:35}}\r\n                                                placeholder=\"Введите страну\"\r\n                                                id=\"country\"\r\n                                                type=\"country\"\r\n                                                name=\"country\"\r\n                                                className=\"yellow-input\"\r\n                                            />\r\n                                        <button\r\n                                            type={\"button\"}\r\n                                            className=\"my-button\"\r\n                                            onClick={() => this.weatherMethod()}\r\n                                        >Search\r\n                                            {/*<Link to=\"/city\">Search</Link>*/}\r\n                                        </button>\r\n                                    </form>\r\n\r\n                    <MainPage button1={this.state.button1} button2={this.state.button2} temp={this.state.temp} scale={this.state.scale} Celsius_Kelvin = {() => this.to_Kelvin() } Celsius_Fahrenheit = {() => this.to_Fahrenheit() } icon={this.state.icon} description={this.state.description}/>\r\n                </Route>\r\n          </Router>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
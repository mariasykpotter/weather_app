{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport './index.css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.weatherMethod = async () => {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          longitude: data.coord.lon,\n          latitude: data.coord.lat,\n          weather: data.weather[0].main,\n          temp: data.main.temp_min,\n          cityName: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          wind: data.wind.speed\n        });\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: undefined,\n      temp: undefined,\n      city: '',\n      cityName: '',\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n      id: \"city\",\n      type: \"city\",\n      name: \"city\",\n      className: \"yellow-input\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\",\n      id: \"country\",\n      type: \"country\",\n      name: \"country\",\n      className: \"yellow-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"my-button\",\n      onClick: () => this.weatherMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Search\")), React.createElement(MainPage, {\n      text: this.state.temp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","App","Component","constructor","props","weatherMethod","response","fetch","state","city","then","res","json","data","setState","longitude","coord","lon","latitude","lat","weather","main","temp","temp_min","cityName","name","country","sys","sunrise","sunset","wind","speed","console","log","undefined","description","render","marginTop","height","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport './index.css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: undefined,\r\n            temp: undefined,\r\n            city: '',\r\n            cityName: '',\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined\r\n        })\r\n    }\r\n    weatherMethod = async() => {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`)\r\n            .then((res) => {\r\n                return  res.json()\r\n            }).then((data) => {\r\n                this.setState({\r\n                    longitude: data.coord.lon,\r\n                    latitude: data.coord.lat,\r\n                    weather: data.weather[0].main,\r\n                    temp: data.main.temp_min,\r\n                    cityName: data.name,\r\n                    country: data.sys.country,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    wind: data.wind.speed\r\n                })\r\n                console.log(data)\r\n            });\r\n    }\r\n    render(){\r\n      return (\r\n          <Router>\r\n                <Route exact path=\"\">\r\n                                    <form style={{marginTop:10}}>\r\n                                            <input style={{height:35}}\r\n                                                placeholder=\"Введите город\"\r\n                                                id=\"city\"\r\n                                                type=\"city\"\r\n                                                name=\"city\"\r\n                                                className=\"yellow-input\"\r\n                                                onChange={e => this.setState({city: e.target.value})}\r\n                                                value={this.props.value}\r\n                                            />\r\n                                            <input\r\n                                                style={{height:35}}\r\n                                                placeholder=\"Введите страну\"\r\n                                                id=\"country\"\r\n                                                type=\"country\"\r\n                                                name=\"country\"\r\n                                                className=\"yellow-input\"\r\n                                            />\r\n                                        <button\r\n                                            type={\"button\"}\r\n                                            className=\"my-button\"\r\n                                            onClick={() => this.weatherMethod()}\r\n                                        >Search\r\n                                            {/*<Link to=\"/city\">Search</Link>*/}\r\n                                        </button>\r\n\r\n                                    </form>\r\n                    <MainPage text={this.state.temp}/>\r\n                </Route>\r\n          </Router>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
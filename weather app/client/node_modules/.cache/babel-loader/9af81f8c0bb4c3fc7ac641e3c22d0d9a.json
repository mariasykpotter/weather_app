{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport './font/Rimouski.css';\nimport './index.css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\nconst KELVIN = 273.15;\nlet scale = '°C';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ChangetoCelsius = () => {\n      let temperature = 1;\n\n      if (scale === '°K') {\n        this.setState({\n          temp: Math.round((this.state.temp - KELVIN) * 100) / 100\n        });\n      } else if (scale === '°F') {\n        this.setState({\n          temp: Math.round((this.state.temp - 32) / 1.8 * 100) / 100\n        });\n      }\n\n      scale = '°C';\n      console.log(scale);\n      console.log('Celsius', this.state);\n    };\n\n    this.ChangetoKelvin = () => {\n      if (scale === '°C') {\n        this.setState({\n          temp: Math.round((this.state.temp + KELVIN) * 100) / 100\n        });\n      } else if (scale === '°F') {\n        this.setState({\n          temp: Math.round((this.state.temp + 459.67) / 1.8 * 100) / 100\n        });\n      }\n\n      scale = '°K';\n      console.log(scale);\n      console.log('Kelvin', this.state);\n    };\n\n    this.ChangetoFahrenheit = () => {\n      console.log('Fahrenheit');\n\n      if (scale === '°C') {\n        this.setState({\n          temp: Math.round((this.state.temp * 1.8 + 32) * 100) / 100\n        });\n      } else if (scale === '°K') {\n        this.setState({\n          temp: Math.round((this.state.temp * 1.8 - 459.67) * 100) / 100\n        });\n      }\n\n      scale = '°F';\n      console.log(scale);\n    };\n\n    this.weatherMethod = async () => {\n      if (this.state.city.length === 5 && Number.parseInt(this.state.city) + '' === this.state.city) {\n        this.searchMethod = 'zip';\n      } else {\n        this.searchMethod = 'q';\n      }\n\n      const url = `https://api.openweathermap.org/data/2.5/weather?${this.searchMethod}=${this.state.city}&appid=${API_key}`;\n      const response = await fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          longitude: data.coord.lon,\n          latitude: data.coord.lat,\n          description: data.weather[0].description,\n          temp: Math.round((data.main.temp - KELVIN) * 100) / 100,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          wind: data.wind.speed,\n          icon: data.weather[0].icon,\n          num_clouds: data.clouds.all\n        });\n        var t = new Date(this.state.sunrise * 1000);\n        var formatted = ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2);\n        console.log(formatted);\n      });\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: '',\n      temp: null,\n      pressure: null,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined,\n      num_clouds: null,\n      icon: undefined,\n      scale: '°C'\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"Enter city or zip-code\",\n      id: \"city\",\n      type: \"city\",\n      name: \"city\",\n      className: \"my-input\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"my-button\",\n      onClick: () => this.weatherMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Search\")), React.createElement(MainPage, {\n      num_clouds: this.state.num_clouds,\n      pressure: this.state.pressure,\n      wind: this.state.wind,\n      humidity: this.state.humidity,\n      temp: this.state.temp,\n      min_temp: this.state.min_temp,\n      max_temp: this.state.max_temp,\n      scale: scale,\n      Celsius: () => this.ChangetoCelsius(),\n      Kelvin: () => this.ChangetoKelvin(),\n      Fahrenheit: () => this.ChangetoFahrenheit(),\n      icon: this.state.icon,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","KELVIN","scale","App","Component","constructor","props","ChangetoCelsius","temperature","setState","temp","Math","round","state","console","log","ChangetoKelvin","ChangetoFahrenheit","weatherMethod","city","length","Number","parseInt","searchMethod","url","response","fetch","then","res","json","data","longitude","coord","lon","latitude","lat","description","weather","main","pressure","humidity","name","country","sys","sunrise","sunset","wind","speed","icon","num_clouds","clouds","all","t","Date","formatted","getHours","slice","getMinutes","undefined","render","marginTop","height","e","target","value","min_temp","max_temp"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport './font/Rimouski.css'\r\nimport './index.css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nconst KELVIN = 273.15;\r\nlet scale = '°C';\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: '',\r\n            temp: null,\r\n            pressure:null,\r\n            humidity: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined,\r\n            num_clouds: null,\r\n            icon:undefined,\r\n            scale: '°C'\r\n        })\r\n    }\r\n    ChangetoCelsius = () => {\r\n        let temperature = 1;\r\n        if(scale === '°K') {\r\n            this.setState({temp: Math.round(((this.state.temp - KELVIN)*100))/100});\r\n        } else if (scale === '°F') {\r\n            this.setState({temp: Math.round(((this.state.temp - 32)/1.8) *100)/100});\r\n        }\r\n        scale='°C'\r\n        console.log(scale)\r\n        console.log('Celsius',this.state)\r\n    }\r\n\r\n    ChangetoKelvin = () => {\r\n        if(scale === '°C' ) {\r\n            this.setState({temp: Math.round((this.state.temp + KELVIN)*100)/100});\r\n        } else if (scale === '°F') {\r\n            this.setState({temp: Math.round(((this.state.temp + 459.67)/1.8) *100)/100});\r\n        }\r\n        scale='°K'\r\n        console.log(scale)\r\n        console.log('Kelvin',this.state)\r\n    }\r\n\r\n    ChangetoFahrenheit = () => {\r\n        console.log('Fahrenheit')\r\n        if(scale === '°C') {\r\n            this.setState({temp: Math.round(((this.state.temp*1.8+32) *100))/100});\r\n        } else if (scale === '°K') {\r\n            this.setState({temp: Math.round(((this.state.temp*1.8)- 459.67) *100)/100});\r\n        }\r\n        scale='°F'\r\n        console.log(scale)\r\n        }\r\n\r\n    weatherMethod = async() => {\r\n        if (this.state.city.length===5 && Number.parseInt(this.state.city)+''===this.state.city){\r\n            this.searchMethod = 'zip';\r\n        }\r\n        else{\r\n            this.searchMethod = 'q';\r\n        }\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?${this.searchMethod}=${this.state.city}&appid=${API_key}`;\r\n        const response = await fetch(url)\r\n            .then((res) => {\r\n                return  res.json()\r\n            }).then((data) => {\r\n                this.setState({\r\n                    longitude: data.coord.lon,\r\n                    latitude: data.coord.lat,\r\n                    description: data.weather[0].description,\r\n                    temp: Math.round(((data.main.temp - KELVIN) *100))/100,\r\n                    pressure: data.main.pressure,\r\n                    humidity: data.main.humidity,\r\n                    city: data.name,\r\n                    country: data.sys.country,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    wind: data.wind.speed,\r\n                    icon: data.weather[0].icon,\r\n                    num_clouds: data.clouds.all\r\n                })\r\n                var t = new Date(this.state.sunrise * 1000);\r\n                var formatted = ('0' + t.getHours()).slice(-2) + ':' + ('0' + t.getMinutes()).slice(-2);\r\n                console.log(formatted);\r\n            });\r\n    }\r\n    render(){\r\n      return (\r\n          <Router>\r\n                <Route exact path=\"\">\r\n                                    <form style={{marginTop:10}}>\r\n                                            <input style={{height:35}}\r\n                                                placeholder=\"Enter city or zip-code\"\r\n                                                id=\"city\"\r\n                                                type=\"city\"\r\n                                                name=\"city\"\r\n                                                className=\"my-input\"\r\n                                                onChange={e => this.setState({city: e.target.value})}\r\n                                                value={this.props.value}\r\n                                            />\r\n                                        <button\r\n                                            type={\"button\"}\r\n                                            className=\"my-button\"\r\n                                            onClick={() => this.weatherMethod()}\r\n                                        >Search\r\n                                            {/*<Link to=\"/city\">Search</Link>*/}\r\n                                        </button>\r\n                                    </form>\r\n\r\n                    <MainPage\r\n                        num_clouds={this.state.num_clouds}\r\n                        pressure={this.state.pressure}\r\n                        wind = {this.state.wind}\r\n                        humidity={this.state.humidity}\r\n                        temp={this.state.temp}\r\n                        min_temp={this.state.min_temp}\r\n                        max_temp={this.state.max_temp}\r\n                        scale={scale}\r\n                        Celsius = {() => this.ChangetoCelsius() }\r\n                        Kelvin = {() => this.ChangetoKelvin() }\r\n                        Fahrenheit = {() => this.ChangetoFahrenheit() }\r\n                        icon={this.state.icon}\r\n                        description={this.state.description}\r\n                    />\r\n                </Route>\r\n          </Router>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
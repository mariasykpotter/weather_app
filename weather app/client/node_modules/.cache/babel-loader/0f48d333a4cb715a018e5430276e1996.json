{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      this.city = e.target.elements.city.value; // console.log(this.city)\n\n      window.location.href = 'http://localhost:3000/city';\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: undefined,\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined\n    };\n  }\n\n  async componentDidMount() {\n    const city = AuthPage.state.city; //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${API_key}`);\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n    const json = await response.json();\n    this.setState({\n      longitude: json.coord.lon,\n      latitude: json.coord.lat,\n      weather: json.weather[0].main,\n      temp: json.main.temp_min,\n      city: json.name,\n      country: json.sys.country,\n      sunrise: json.sys.sunrise,\n      sunset: json.sys.sunset,\n      wind: json.wind.speed\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(AuthPage, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(MainPage, {\n      text: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","App","Component","constructor","props","gettingWeather","e","preventDefault","city","target","elements","value","window","location","href","state","longitude","undefined","latitude","description","temp","country","sunrise","sunset","wind","componentDidMount","response","fetch","json","setState","coord","lon","lat","weather","main","temp_min","name","sys","speed","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: undefined,\r\n            temp: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined\r\n        })\r\n    }\r\n    gettingWeather = async(e) => {\r\n        e.preventDefault();\r\n        this.city = e.target.elements.city.value;\r\n        // console.log(this.city)\r\n        window.location.href = 'http://localhost:3000/city';\r\n    }\r\n    async componentDidMount() {\r\n        const city = AuthPage.state.city;\r\n        //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${API_key}`);\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\r\n        const json = await response.json();\r\n        this.setState({\r\n            longitude: json.coord.lon,\r\n                latitude: json.coord.lat,\r\n                weather: json.weather[0].main,\r\n                temp: json.main.temp_min,\r\n                city: json.name,\r\n                country: json.sys.country,\r\n                sunrise: json.sys.sunrise,\r\n                sunset: json.sys.sunset,\r\n                wind: json.wind.speed\r\n            })\r\n    }\r\n    render(){\r\n      return (\r\n          <div>\r\n          <Router>\r\n            <div className=\"container\">\r\n                <Route exact path=\"/\">\r\n                    <AuthPage weatherMethod={this.gettingWeather} />\r\n                </Route>\r\n                <Route exact path=\"/city\">\r\n                    <MainPage text={this.state.city}/>\r\n                </Route>\r\n                <Route exact path=\"/page\">\r\n                    <Page/>\r\n                </Route>\r\n            </div>\r\n          </Router>\r\n          </div>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
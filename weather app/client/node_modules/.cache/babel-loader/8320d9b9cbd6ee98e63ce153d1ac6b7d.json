{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { LinksPage } from './pages/LinksPage';\nimport { CreatePage } from './pages/CreatePage';\nimport { DetailPage } from './pages/DetailPage';\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport { Navbar } from './components/Navbar';\nimport 'materialize-css';\nimport { Page } from \"./pages/Page\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      this.city = e.target.elements.city.value; // const api_url = await\n      //     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},uk&appid=${this.API_key}`)\n      // var data = await api_url.json();\n      // this.weather = {\n      //     longitude: data.coord.lon,\n      //     latitude: data.coord.lat,\n      //     weather: data.weather[0].main,\n      //     temp: data.main.temp_min,\n      //     city: data.name,\n      //     country: data.sys.country,\n      //     sunrise: data.sys.sunrise,\n      //     sunset: data.sys.sunset,\n      //     wind: data.wind.speed\n      // }\n      // console.log(this.weather)\n      // window.location.href = 'http://localhost:3000/city';\n    };\n\n    this.state = {\n      data: []\n    }; // this.state = ({\n    //     longitude: 0,\n    //     latitude: 0,\n    //     description: 'sun',\n    //     temp: 245,\n    //     city: 'Lviv',\n    //     country: 'Ukraine',\n    //     sunrise: 1586754487,\n    //     sunset: 1586804001,\n    //     wind: 7.2\n    // })\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${this.API_key}`);\n    const json = await response.json();\n    this.setState({\n      data: json.name\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(AuthPage, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MainPage, {\n      text: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","LinksPage","CreatePage","DetailPage","AuthPage","MainPage","Navbar","Page","App","Component","constructor","props","API_key","gettingWeather","e","preventDefault","city","target","elements","value","state","data","componentDidMount","response","fetch","json","setState","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,UAAhD,QAAiE,kBAAjE;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAO,iBAAP;AACA,SAAQC,IAAR,QAAmB,cAAnB;;AACA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAenBC,OAfmB,GAeT,kCAfS;;AAAA,SAgBnBC,cAhBmB,GAgBF,MAAMC,CAAN,IAAY;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,IAAL,GAAYF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAAnC,CAFyB,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAnCkB;;AAEf,SAAKC,KAAL,GAAc;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAd,CAFe,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAsBD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoD,KAAKR,IAAK,aAAY,KAAKJ,OAAQ,EAAzF,CAA5B;AACA,UAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAEI,IAAI,CAACE;AAAb,KAAd;AACH;;AACDC,EAAAA,MAAM,GAAE;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAE,KAAKf,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADF,CADA,CADJ;AAiBL;;AA5DgC;;AA+DjC,eAAeb,GAAf","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {LinksPage} from './pages/LinksPage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport {Navbar} from './components/Navbar'\r\nimport 'materialize-css'\r\nimport {Page} from \"./pages/Page\";\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({data:[]})\r\n        // this.state = ({\r\n        //     longitude: 0,\r\n        //     latitude: 0,\r\n        //     description: 'sun',\r\n        //     temp: 245,\r\n        //     city: 'Lviv',\r\n        //     country: 'Ukraine',\r\n        //     sunrise: 1586754487,\r\n        //     sunset: 1586804001,\r\n        //     wind: 7.2\r\n        // })\r\n    }\r\n    API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\n    gettingWeather = async(e) => {\r\n        e.preventDefault();\r\n        this.city = e.target.elements.city.value;\r\n        // const api_url = await\r\n        //     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},uk&appid=${this.API_key}`)\r\n        // var data = await api_url.json();\r\n        // this.weather = {\r\n        //     longitude: data.coord.lon,\r\n        //     latitude: data.coord.lat,\r\n        //     weather: data.weather[0].main,\r\n        //     temp: data.main.temp_min,\r\n        //     city: data.name,\r\n        //     country: data.sys.country,\r\n        //     sunrise: data.sys.sunrise,\r\n        //     sunset: data.sys.sunset,\r\n        //     wind: data.wind.speed\r\n        // }\r\n        // console.log(this.weather)\r\n        // window.location.href = 'http://localhost:3000/city';\r\n    }\r\n    async componentDidMount() {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${this.API_key}`);\r\n        const json = await response.json();\r\n        this.setState({ data: json.name });\r\n    }\r\n    render(){\r\n      return (\r\n          <div>\r\n          <Router>\r\n            <div className=\"container\">\r\n                <Route exact path=\"/\">\r\n                    <AuthPage weatherMethod={this.gettingWeather} />\r\n                </Route>\r\n                <Route exact path=\"/city\">\r\n                    <MainPage text={this.state.data}/>\r\n                </Route>\r\n                <Route exact path=\"/page\">\r\n                    <Page/>\r\n                </Route>\r\n            </div>\r\n          </Router>\r\n          </div>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
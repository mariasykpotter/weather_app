{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport './font/Rimouski.css';\nimport './index.css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\nconst KELVIN = 272.15;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.to_Kelvin = () => {\n      this.setState(prevState => ({\n        ispressed1: !prevState.ispressed1,\n        temp: !this.state.ispressed1 ? Math.round((this.state.temp + KELVIN) * 100) / 100 : Math.round((this.state.temp - KELVIN) * 100) / 100,\n        scale: !this.state.ispressed1 ? '°K' : '°C',\n        button1: !this.state.ispressed1 ? 'Celsius' : 'Kelvin'\n      }));\n      console.log(\"1 \", this.state.ispressed1);\n      console.log(\"2 \", this.state.ispressed2);\n\n      if (this.state.pressed1 && this.state.pressed2) {\n        console.log('here1');\n      }\n    };\n\n    this.to_Fahrenheit = () => {\n      this.setState(prevState => ({\n        ispressed2: !prevState.ispressed2,\n        temp: !this.state.ispressed2 ? Math.round((this.state.temp * 9 / 5 + 32) * 100) / 100 : Math.round((this.state.temp - 32) * 5 / 9 * 100) / 100,\n        scale: !this.state.ispressed2 ? '°F' : '°C',\n        button2: !this.state.ispressed2 ? 'Celsius' : 'Fahrenheit'\n      }));\n\n      if (this.state.pressed1 && this.state.pressed2) {\n        console.log('here2');\n      }\n    };\n\n    this.weatherMethod = async () => {\n      if (this.state.city.length === 5 && Number.parseInt(this.state.city) + '' === this.state.city) {\n        this.searchMethod = 'zip';\n      } else {\n        this.searchMethod = 'q';\n      }\n\n      const url = `https://api.openweathermap.org/data/2.5/weather?${this.searchMethod}=${this.state.city}&appid=${API_key}`;\n      const response = await fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          longitude: data.coord.lon,\n          latitude: data.coord.lat,\n          description: data.weather[0].description,\n          temp: Math.round((data.main.temp - KELVIN) * 100) / 100,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          wind: data.wind.speed,\n          icon: data.weather[0].icon\n        });\n      });\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: '',\n      temp: null,\n      pressure: null,\n      humidity: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined,\n      icon: undefined,\n      scale: '°C',\n      button1: 'Kelvin',\n      ispressed1: false,\n      button2: 'Fahrenheit',\n      ispressed2: false\n    };\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        height: 35\n      },\n      placeholder: \"Enter city or zip-code\",\n      id: \"city\",\n      type: \"city\",\n      name: \"city\",\n      className: \"my-input\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"my-button\",\n      onClick: () => this.weatherMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Search\")), React.createElement(MainPage, {\n      pressure: this.state.pressure,\n      wind: this.state.wind,\n      humidity: this.state.humidity,\n      button1: this.state.button1,\n      button2: this.state.button2,\n      temp: this.state.temp,\n      min_temp: this.state.min_temp,\n      max_temp: this.state.max_temp,\n      scale: this.state.scale,\n      Celsius_Kelvin: () => this.to_Kelvin(),\n      Celsius_Fahrenheit: () => this.to_Fahrenheit(),\n      icon: this.state.icon,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","KELVIN","App","Component","constructor","props","to_Kelvin","setState","prevState","ispressed1","temp","state","Math","round","scale","button1","console","log","ispressed2","pressed1","pressed2","to_Fahrenheit","button2","weatherMethod","city","length","Number","parseInt","searchMethod","url","response","fetch","then","res","json","data","longitude","coord","lon","latitude","lat","description","weather","main","pressure","humidity","name","country","sys","sunrise","sunset","wind","speed","icon","undefined","render","marginTop","height","e","target","value","min_temp","max_temp"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport './font/Rimouski.css'\r\nimport './index.css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nconst KELVIN = 272.15;\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: '',\r\n            temp: null,\r\n            pressure:null,\r\n            humidity: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined,\r\n            icon:undefined,\r\n            scale: '°C',\r\n            button1: 'Kelvin',\r\n            ispressed1: false,\r\n            button2: 'Fahrenheit',\r\n            ispressed2: false\r\n        })\r\n    }\r\n\r\n    to_Kelvin = () => {\r\n        this.setState((prevState) => ({ ispressed1 : !prevState.ispressed1 ,\r\n                temp: !this.state.ispressed1 ?\r\n                Math.round(((this.state.temp + KELVIN)*100))/100 :\r\n                Math.round(((this.state.temp - KELVIN) *100))/100,\r\n            scale: !this.state.ispressed1 ?\r\n                '°K':'°C',\r\n            button1: !this.state.ispressed1 ?\r\n                'Celsius':'Kelvin'\r\n        }) )\r\n        console.log(\"1 \",this.state.ispressed1)\r\n        console.log(\"2 \",this.state.ispressed2)\r\n        if (this.state.pressed1 && this.state.pressed2){\r\n            console.log('here1')\r\n        }\r\n    }\r\n    to_Fahrenheit = () => {\r\n        this.setState((prevState) => ({ ispressed2 : !prevState.ispressed2 ,\r\n            temp: !this.state.ispressed2 ?\r\n                Math.round((this.state.temp*9/5 + 32)*100)/100 :\r\n                Math.round(((this.state.temp - 32)*5/9) *100)/100,\r\n            scale: !this.state.ispressed2 ?\r\n                '°F':'°C',\r\n            button2: !this.state.ispressed2 ?\r\n                'Celsius':'Fahrenheit'\r\n        }) );\r\n        if (this.state.pressed1 && this.state.pressed2){\r\n            console.log('here2')\r\n        }\r\n        }\r\n    weatherMethod = async() => {\r\n        if (this.state.city.length===5 && Number.parseInt(this.state.city)+''===this.state.city){\r\n            this.searchMethod = 'zip';\r\n        }\r\n        else{\r\n            this.searchMethod = 'q';\r\n        }\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?${this.searchMethod}=${this.state.city}&appid=${API_key}`;\r\n        const response = await fetch(url)\r\n            .then((res) => {\r\n                return  res.json()\r\n            }).then((data) => {\r\n                this.setState({\r\n                    longitude: data.coord.lon,\r\n                    latitude: data.coord.lat,\r\n                    description: data.weather[0].description,\r\n                    temp: Math.round(((data.main.temp - KELVIN) *100))/100,\r\n                    pressure: data.main.pressure,\r\n                    humidity: data.main.humidity,\r\n                    city: data.name,\r\n                    country: data.sys.country,\r\n                    sunrise: data.sys.sunrise,\r\n                    sunset: data.sys.sunset,\r\n                    wind: data.wind.speed,\r\n                    icon: data.weather[0].icon\r\n                })\r\n            });\r\n    }\r\n    render(){\r\n      return (\r\n          <Router>\r\n                <Route exact path=\"\">\r\n                                    <form style={{marginTop:10}}>\r\n                                            <input style={{height:35}}\r\n                                                placeholder=\"Enter city or zip-code\"\r\n                                                id=\"city\"\r\n                                                type=\"city\"\r\n                                                name=\"city\"\r\n                                                className=\"my-input\"\r\n                                                onChange={e => this.setState({city: e.target.value})}\r\n                                                value={this.props.value}\r\n                                            />\r\n                                        <button\r\n                                            type={\"button\"}\r\n                                            className=\"my-button\"\r\n                                            onClick={() => this.weatherMethod()}\r\n                                        >Search\r\n                                            {/*<Link to=\"/city\">Search</Link>*/}\r\n                                        </button>\r\n                                    </form>\r\n\r\n                    <MainPage pressure={this.state.pressure} wind = {this.state.wind} humidity={this.state.humidity} button1={this.state.button1} button2={this.state.button2} temp={this.state.temp} min_temp={this.state.min_temp} max_temp={this.state.max_temp} scale={this.state.scale} Celsius_Kelvin = {() => this.to_Kelvin() } Celsius_Fahrenheit = {() => this.to_Fahrenheit() } icon={this.state.icon} description={this.state.description}/>\r\n                </Route>\r\n          </Router>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}
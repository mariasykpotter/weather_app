{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\site\\\\mern-full-course\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { AuthPage } from './pages/AuthPage';\nimport { MainPage } from './pages/MainPage';\nimport 'materialize-css';\nimport { Page } from \"./pages/Page\";\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      this.city = e.target.elements.city.value; // console.log(this.city)\n      // window.location.href = 'http://localhost:3000/city';\n\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`);\n      const json = await response.json(); // this.setState({\n      //     longitude: json.coord.lon,\n      //         latitude: json.coord.lat,\n      //         weather: json.weather[0].main,\n      //         temp: json.main.temp_min,\n      //         city: json.name,\n      //         country: json.sys.country,\n      //         sunrise: json.sys.sunrise,\n      //         sunset: json.sys.sunset,\n      //         wind: json.wind.speed\n      //     })\n    };\n\n    this.state = {\n      longitude: undefined,\n      latitude: undefined,\n      description: undefined,\n      temp: undefined,\n      city: '',\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      wind: undefined\n    };\n  }\n\n  async componentDidMount() {\n    //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${API_key}`);\n    console.log('state in APP', this.state); //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6 offset-s3\",\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card blue darken-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Enter city and country\"), React.createElement(\"form\", {\n      onSubmit: this.props.weatherMethod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\",\n      id: \"city\",\n      type: \"city\",\n      name: \"city\",\n      className: \"yellow-input\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0443\",\n      id: \"country\",\n      type: \"country\",\n      name: \"country\",\n      className: \"yellow-input\" // value={this.state.country}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn yellow darken-4\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Search\")))))), React.createElement(MainPage, {\n      text: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/web/site/mern-full-course/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","AuthPage","MainPage","Page","API_key","App","Component","constructor","props","gettingWeather","e","preventDefault","city","target","elements","value","response","fetch","state","json","longitude","undefined","latitude","description","temp","country","sunrise","sunset","wind","componentDidMount","console","log","render","marginTop","weatherMethod","setState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BrowserRouter as Router, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {AuthPage} from './pages/AuthPage'\r\nimport {MainPage} from './pages/MainPage'\r\nimport 'materialize-css'\r\nimport {Page} from \"./pages/Page\";\r\nconst API_key = \"2050604e9f3fe6c87cc830e26c8f53dc\";\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = ({\r\n            longitude: undefined,\r\n            latitude: undefined,\r\n            description: undefined,\r\n            temp: undefined,\r\n            city: '',\r\n            country: undefined,\r\n            sunrise: undefined,\r\n            sunset: undefined,\r\n            wind: undefined\r\n        })\r\n    }\r\n    gettingWeather = async(e) => {\r\n        e.preventDefault();\r\n\r\n        this.city = e.target.elements.city.value;\r\n        // console.log(this.city)\r\n        // window.location.href = 'http://localhost:3000/city';\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`);\r\n        const json = await response.json();\r\n        // this.setState({\r\n        //     longitude: json.coord.lon,\r\n        //         latitude: json.coord.lat,\r\n        //         weather: json.weather[0].main,\r\n        //         temp: json.main.temp_min,\r\n        //         city: json.name,\r\n        //         country: json.sys.country,\r\n        //         sunrise: json.sys.sunrise,\r\n        //         sunset: json.sys.sunset,\r\n        //         wind: json.wind.speed\r\n        //     })\r\n    }\r\n    async componentDidMount() {\r\n        //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.city},uk&appid=${API_key}`);\r\n        console.log('state in APP', this.state);\r\n        //const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${API_key}`);\r\n\r\n    }\r\n    render(){\r\n      return (\r\n          <div>\r\n          <Router>\r\n\r\n            <div className=\"container\">\r\n                <Route exact path=\"/\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6 offset-s3\" style={{marginTop:100}}>\r\n                            <div className=\"card blue darken-1\">\r\n                                <div className=\"card-content white-text\">\r\n                                    <span className=\"card-title\">Enter city and country</span>\r\n                                    <form onSubmit={this.props.weatherMethod}>\r\n                                        <div className=\"input-field\">\r\n                                            <input\r\n                                                placeholder=\"Введите город\"\r\n                                                id=\"city\"\r\n                                                type=\"city\"\r\n                                                name=\"city\"\r\n                                                className=\"yellow-input\"\r\n                                                onChange={e => this.setState({city: e.target.value})}\r\n                                                value={this.props.value}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"input-field\">\r\n                                            <input\r\n                                                placeholder=\"Введите страну\"\r\n                                                id=\"country\"\r\n                                                type=\"country\"\r\n                                                name=\"country\"\r\n                                                className=\"yellow-input\"\r\n                                                // value={this.state.country}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <button\r\n                                            className=\"btn yellow darken-4\" style={{marginTop:20}}\r\n                                        >Search\r\n                                            {/*<Link to=\"/city\">Search</Link>*/}\r\n                                        </button>\r\n\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/*<AuthPage weatherMethod={e => this.gettingWeather(e)}*/}\r\n                    {/*          //value={this.state.city}*/}\r\n\r\n                    {/*          onChange={(e) => this.setState({city: e.target.value})}*/}\r\n                    {/*/>*/}\r\n                {/*</Route>*/}\r\n                {/*<Route exact path=\"/city\">*/}\r\n                    <MainPage text={this.state.city}/>\r\n                </Route>\r\n                <Route exact path=\"/page\">\r\n                    <Page/>\r\n                </Route>\r\n            </div>\r\n          </Router>\r\n          </div>\r\n      )\r\n}\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}